name: Setup Test Environment
description: Composable Action for ensuring speedy test setup

inputs:
  ## Speeds Up Lint by enabling reuse
  restore-lint-caches:
    description: Whether to restore lint caches
    required: false
    default: false
  ## Speeds Up Build of bigger apps by enabling reuse
  restore-broccoli-cache:
    description: Whether to restore broccoli
    required: false
    default: false
  use-production-caches:
    description: Whether to restore from production caches
    required: false
    default: false
  install:
    description: Whether to install dependencies
    required: false
    default: false
  skip-addon-build:
    description: Whether to skip the prepare step for in-repo v2 addons when running pnpm install
    required: false
    default: false
  adtl-install-args:
    description: additional args to pass to pnpm install
    required: false
    default: ''
  parallel-build:
    description: Whether to build in parallel
    required: false
    default: true
  ## Set to same as number of cores
  ## 2 for ubuntu-latest (default)
  jobs:
    description: How many Build Jobs to Run
    required: false
    default: 2
  ref:
    description: Ref to Setup
    required: false
    default: ${{ github.sha }}
  repo-token:
    description: Token to use for TurboRepo
    required: false
    default: ''
  with-cert:
    description: Whether to setup an SSL Cert
    required: false
    default: false

runs:
  using: composite
  steps:
    - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
    - uses: actions/setup-node@v4
      with:
        registry-url: 'https://registry.npmjs.org'
        node-version-file: 'package.json'
        cache: 'pnpm'

    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: 'Setup local TurboRepo server'
      if: ${{ inputs.repo-token }}
      uses: felixmosh/turborepo-gh-artifacts@v2
      with:
        repo-token: ${{ inputs.repo-token }}

    - name: Set Up Homebrew
      if: ${{ inputs.with-cert }}
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: 'Setup SSL Cert'
      if: ${{ inputs.with-cert }}
      shell: bash
      run: |
        sudo apt install libnss3-tools
        brew install mkcert

    - name: Configure Parallel Builds
      if: ${{ inputs.parallel-build == 'true' }}
      shell: bash
      run: |
        echo "JOBS=${{ inputs.jobs }}" >> $GITHUB_ENV
        echo "THROW_UNLESS_PARALLELIZABLE=1" >> $GITHUB_ENV

    - name: Install Dependencies
      if: ${{ inputs.install == 'true' && inputs.skip-addon-build == 'false' }}
      shell: bash
      run: pnpm install --prefer-offline $ADTL_ARGS
      env:
        ADTL_ARGS: ${{ inputs.adtl-install-args }}

    - name: Install Dependencies w/o Addon Builds
      if: ${{ inputs.install == 'true' && inputs.skip-addon-build == 'true' }}
      shell: bash
      run: pnpm install --prefer-offline --ignore-scripts $ADTL_ARGS
      env:
        ADTL_ARGS: ${{ inputs.adtl-install-args }}

    - name: Setup Broccoli Caching
      if: ${{ inputs.restore-broccoli-cache == 'true' }}
      shell: bash
      run: |
        echo "FORCE_PERSISTENCE_IN_CI=true" >> $GITHUB_ENV
        echo "BROCCOLI_PERSISTENT_FILTER_CACHE_ROOT=${{ github.workspace }}/.broccoli-cache" >> $GITHUB_ENV

    - name: Restore Broccoli Cache
      if: ${{ inputs.restore-broccoli-cache == 'true' }}
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.broccoli-cache
          node_modules/.cache
          tests/main/node_modules/.cache
        key: broccoli${{inputs.use-production-caches == 'true' && '-production-' || '-'}}${{ github.head_ref }}-${{inputs.ref }}
        restore-keys: |
          broccoli${{inputs.use-production-caches == 'true' && '-production-' || '-'}}${{ github.head_ref }}
          broccoli${{inputs.use-production-caches == 'true' && '-production-' || '-'}}${{ github.base_ref }}
          broccoli${{inputs.use-production-caches == 'true' && '-production-' || '-'}}main

    - name: Restore Lint Caches
      if: ${{ inputs.restore-lint-caches == 'true' }}
      uses: actions/cache@v3
      with:
        path: |
          .eslintcache
          .prettier-cache
          tsconfig.tsbuildinfo
        key: lint-${{ github.head_ref }}-${{ inputs.ref }}
        restore-keys: |
          lint-${{ github.head_ref }}
          lint-${{ github.base_ref }}
          lint-main

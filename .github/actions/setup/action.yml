name: Setup Test Environment
description: Composable Action for ensuring speedy test setup

inputs:
  ## Speeds Up Lint by enabling reuse
  restore-lint-caches:
    description: Whether to restore lint caches
    required: false
    default: false
  ## Speeds Up Build of bigger apps by enabling reuse
  restore-broccoli-cache:
    description: Whether to restore broccoli
    required: false
    default: false
  install:
    description: Whether to install dependencies
    required: false
    default: false
  skip-addon-build:
    description: Whether to skip the prepare step for in-repo v2 addons when running pnpm install
    required: false
    default: false
  parallel-build:
    description: Whether to build in parallel
    required: false
    default: true
  ## Set to same as number of cores
  ## 2 for ubuntu-latest (default)
  jobs:
    description: How many Build Jobs to Run
    required: false
    default: 2
  ref:
    description: Ref to Setup
    required: false
    default: ${{ github.sha }}
  node-version:
    description: Node Version to USe
    required: false
    default: 19.x

runs:
  using: composite
  steps:
    - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # tag=v2.2.4
    - uses: actions/setup-node@v3
      with:
        registry-url: 'https://registry.npmjs.org'
        node-version: ${{inputs.node-version }}
        cache: 'pnpm'

    - name: Configure Parallel Builds
      if: ${{ inputs.parallel-build == 'true' }}
      shell: bash
      run: |
        echo "JOBS=${{ inputs.jobs }}" >> $GITHUB_ENV
        echo "EXAM_SPLIT_COUNT=${{ inputs.jobs }}" >> $GITHUB_ENV
        echo "THROW_UNLESS_PARALLELIZABLE=1" >> $GITHUB_ENV

    - name: Install Dependencies
      if: ${{ inputs.install == 'true' && inputs.skip-addon-build == 'false' }}
      shell: bash
      run: pnpm install --prefer-offline

    - name: Install Dependencies w/o Addon Builds
      if: ${{ inputs.install == 'true' && inputs.skip-addon-build == 'true' }}
      shell: bash
      run: pnpm install --prefer-offline --ignore-scripts

    - name: Setup Broccoli Caching
      if: ${{ inputs.restore-broccoli-cache == 'true' }}
      shell: bash
      run: |
        echo "FORCE_PERSISTENCE_IN_CI=true" >> $GITHUB_ENV
        echo "BROCCOLI_PERSISTENT_FILTER_CACHE_ROOT=${{ github.workspace }}/.broccoli-cache" >> $GITHUB_ENV

    - name: Restore Broccoli Cache
      if: ${{ inputs.restore-broccoli-cache == 'true' }}
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.broccoli-cache
          node_modules/.cache
        key: broccoli-${{ github.head_ref }}-${{inputs.ref }}
        restore-keys: |
          broccoli-${{ github.head_ref }}
          broccoli-develop

    - name: Restore Lint Caches
      if: ${{ inputs.restore-lint-caches == 'true' }}
      uses: actions/cache@v3
      with:
        path: |
          .eslintcache
          .prettier-cache
          tsconfig.tsbuildinfo
        key: lint-${{ github.head_ref }}-${{ inputs.ref }}
        restore-keys: |
          lint-${{ github.head_ref }}
          lint-develop

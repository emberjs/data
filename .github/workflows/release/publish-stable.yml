name: Publish Stable Release

on:
  workflow_dispatch:
    inputs:
      source-branch:
        description: 'If starting a new cycle, or reversioning, the source branch to update the release branch from'
        required: false
        default: 'beta'
        type: choice
        options:
        - beta      # promotes beta to stable
        - main      # promotes canary to stable
        - release   # re-releases a stable version
      # At cycle start we must always reset the release branch to beta.
      is-cycle-start:
        description: 'Whether this is the start of a new release cycle'
        required: true
        default: false
        type: boolean
      # donwversion e.g. 5.4.0-alpha.1 => 5.3.1
      # upversion e.g. 5.3.1 => 5.4.0
      from-version:
        description: 'When downversioning or upversioning, the version from which to increment'
        required: true
        default: 'mirror'
        type: string
        options:
        - stable-cycle  # start or continue a stable-cycle.
        - mirror        # mirror code from beta. This is the default.
      increment:
        description: 'Type of Version Bump To Perform (only used when downversioning or upversioning)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  TURBO_API: http://127.0.0.1:9080
  TURBO_TOKEN: this-is-not-a-secret
  TURBO_TEAM: myself

jobs:
  release:
    name: Perform Release
    runs-on: ubuntu-latest
    environment: deployment
    steps:
      - name: Enforce Branch
        # Note: we always checkout release in actions/checkout, but this enforces
        # good hygiene.
        if: github.ref != 'refs/heads/release'
        run: |
          echo "Stable may only be published from the release branch."
          exit 1
      - name: Make sure git user is setup
        run: |
          git config --local user.email ${{ secrets.GH_DEPLOY_EMAIL }}
          git config --local user.name ${{ secrets.GH_DEPLOY_NAME }}
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-tags: true
          progress: false
          token: ${{ secrets.GH_DEPLOY_TOKEN }}
          fetch-depth: 3
          ref: release
      ## Ensure we have a copy of the source branch
      - run: git fetch origin ${{ github.event.inputs.source-branch }} --depth=1
      - name: Reset the Release Branch
        if: github.event.inputs.source-branch != 'release' && github.event.inputs.is-cycle-start == 'true'
        run: git reset --hard origin/${{ github.event.inputs.source-branch }} && git push origin release -f
      - uses: ./.github/actions/setup
        with:
          install: true
          repo-token: ${{ secrets.GH_DEPLOY_TOKEN }}
      - name: Publish New Release
        # We always increment from the branch state
        # For downversion or upversion
        if: github.event.inputs.is-cycle-start == 'true'
        run: bun release exec publish release
        env:
          FORCE_COLOR: 2
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Publish New Mirror Release
        if: github.event.inputs.kind == 'mirror'
        run: bun release exec publish beta --from=${{ steps.version.outputs.stdout }}
        env:
          FORCE_COLOR: 2
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: tarballs
          path: tmp/tarballs/**/*.tgz

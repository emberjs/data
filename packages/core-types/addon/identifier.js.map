{"version":3,"file":"identifier.js","sources":["../src/identifier.ts"],"sourcesContent":["/**\n  @module @ember-data/store\n*/\n\n// provided for additional debuggability\nexport const DEBUG_CLIENT_ORIGINATED: unique symbol = Symbol('record-originated-on-client');\nexport const DEBUG_IDENTIFIER_BUCKET: unique symbol = Symbol('identifier-bucket');\nexport const DEBUG_STALE_CACHE_OWNER: unique symbol = Symbol('warpDriveStaleCache');\n\n// also present in production\nexport const CACHE_OWNER: unique symbol = Symbol('warpDriveCache');\n\nexport type IdentifierBucket = 'record' | 'document';\n\nexport interface Identifier {\n  lid: string;\n  clientId?: string;\n}\n\nexport interface ExistingRecordIdentifier extends Identifier {\n  id: string;\n  type: string;\n}\n\nexport interface NewRecordIdentifier extends Identifier {\n  id: string | null;\n  type: string;\n}\n\nexport type StableDocumentIdentifier = {\n  lid: string;\n};\n\n/**\n * An Identifier specific to a record which may or may not\n * be present in the cache.\n *\n * The absence of an `id` DOES NOT indicate that this\n * Identifier is for a new client-created record as it\n * may also indicate that it was generated for a secondary\n * index and the primary `id` index is not yet known.\n *\n * @internal\n */\nexport type RecordIdentifier = ExistingRecordIdentifier | NewRecordIdentifier;\n\n/**\n * Used when an Identifier is known to be the stable version\n *\n * @internal\n */\nexport interface StableIdentifier extends Identifier {\n  [DEBUG_IDENTIFIER_BUCKET]?: string;\n}\n\n/**\n * Used when a StableRecordIdentifier was not created locally as part\n * of a call to store.createRecord\n *\n * Distinguishing between this Identifier and one for a client created\n * record that was created with an ID is generally speaking not possible\n * at runtime, so anything with an ID typically narrows to this.\n *\n * @internal\n */\nexport interface StableExistingRecordIdentifier extends StableIdentifier {\n  id: string;\n  type: string;\n  [DEBUG_CLIENT_ORIGINATED]?: boolean;\n  [CACHE_OWNER]: number | undefined;\n  [DEBUG_STALE_CACHE_OWNER]?: number | undefined;\n}\n\n/**\n * Used when a StableRecordIdentifier was created locally\n * (by a call to store.createRecord).\n *\n * It is possible in rare circumstances to have a StableRecordIdentifier\n * that is not for a new record but does not have an ID. This would\n * happen if a user intentionally created one for use with a secondary-index\n * prior to the record having been fully loaded.\n *\n * @internal\n */\nexport interface StableNewRecordIdentifier extends StableIdentifier {\n  id: string | null;\n  type: string;\n  [DEBUG_CLIENT_ORIGINATED]?: boolean;\n  [CACHE_OWNER]: number | undefined;\n  [DEBUG_STALE_CACHE_OWNER]?: number | undefined;\n}\n\n/**\n * A referentially stable object with a unique string (lid) that can be used\n * as a reference to data in the cache.\n *\n * Every record instance has a unique identifier, and identifiers may refer\n * to data that has never been loaded (for instance, in an async relationship).\n *\n * @class StableRecordIdentifier\n * @public\n */\n\n/**\n * A string representing a unique identity.\n *\n * @property {string} lid\n * @public\n */\n/**\n * the primary resource `type` or `modelName` this identity belongs to.\n *\n * @property {string} type\n * @public\n */\n/**\n * the primary id for the record this identity belongs to. `null`\n * if not yet assigned an id.\n *\n * @property {string | null} id\n * @public\n */\nexport type StableRecordIdentifier = StableExistingRecordIdentifier | StableNewRecordIdentifier;\n"],"names":["DEBUG_CLIENT_ORIGINATED","Symbol","DEBUG_IDENTIFIER_BUCKET","DEBUG_STALE_CACHE_OWNER","CACHE_OWNER"],"mappings":"AAAA;AACA;AACA;;AAEA;MACaA,uBAAsC,GAAGC,MAAM,CAAC,6BAA6B,EAAC;MAC9EC,uBAAsC,GAAGD,MAAM,CAAC,mBAAmB,EAAC;MACpEE,uBAAsC,GAAGF,MAAM,CAAC,qBAAqB,EAAC;;AAEnF;MACaG,WAA0B,GAAGH,MAAM,CAAC,gBAAgB,EAAC;;AAuBlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}